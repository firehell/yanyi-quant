---
description: 开发文档
globs: 
alwaysApply: false
---
好的，下面是基于您提供的需求文档，我为您制定的详细开发文档，包含任务拆分、阶段划分和验收标准：

**项目名称：** 基于 Polygon 数据的美股日内交易辅助系统 (Day Trading Assistant)

**开发文档**

**1. 项目目标回顾**

利用历史和实时美股数据，结合技术分析和 AI 模型，辅助用户进行日内交易决策，筛选潜力股票，提高交易胜率和盈利能力。

**2. 总体技术架构**

*   **编程语言：** Python（数据分析、AI模型、策略逻辑） + Go（高性能数据处理、实时数据、模拟交易）
*   **数据库：** MySQL
*   **数据库管理：** Navicat
*   **AI框架：** TensorFlow/PyTorch + scikit-learn
*   **前端（可选）：**  React/Vue.js/PyQt （根据实际情况选择）
*   **版本控制：** Git
*   **项目管理：** Jira / Trello （或其他敏捷工具）

**3. 开发阶段详细拆分**

以下将开发过程分为几个主要阶段，每个阶段包含更细粒度的任务，并设定了验收标准：

**阶段 1：数据准备与基础环境搭建 (预计时间：2-3周)**

| 任务编号 | 任务描述                             | 负责人 | 详细描述                                                                                                                                                                                                                             | 验收标准                                                                                                                                                                      |
| -------- | ------------------------------------ | ----- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| 1.1      | 数据库环境搭建                         |       | 安装并配置MySQL数据库，使用Navicat连接数据库。                                                                                                                                                                                                | MySQL数据库成功安装并运行，Navicat可成功连接。                                                                                                                                  |
| 1.2      | 历史数据导入                         |       | 将Polygon S3中的历史数据（CSV或Parquet格式）导入到MySQL数据库中。                                                                                                                                                                                   | 历史数据完整导入MySQL，字段正确，可通过SQL查询验证。                                                                                                                              |
| 1.3      | 历史数据清洗                         |       | *   缺失值处理：使用前一分钟数据填充；连续缺失超过5分钟（可配置）的数据，删除对应交易日该股票数据（可选）。*   异常值处理：价格波动超过5%（可配置）视为异常；成交量超过过去M分钟平均成交量的Y倍（可配置）视为异常，删除记录。*   数据一致性检查：确保交易时段一致；检查重复时间戳。 | 清洗后的数据无明显缺失、异常值，时间戳唯一，交易时段一致。提供数据质量报告。                                                                                                               |
| 1.4      | 实时数据接口对接（Polygon）            |       | *   建立与Polygon WebSocket的连接，接收实时行情和交易数据。*   建立与Polygon REST API的连接，用于获取补充数据和历史数据。                                                                                                                                     | 可稳定接收Polygon的WebSocket实时数据流，REST API可正常调用并返回数据。                                                                                                            |
| 1.5      | 实时数据处理模块（Go）                 |       | *   开发数据过滤逻辑，筛选关注的股票。*   实现数据聚合，将实时数据转换为分钟级（或其他自定义级别）数据。*   进行数据校验，确保数据完整性和准确性。                                                                                                                             | 实时数据处理模块稳定运行，能正确过滤、聚合和校验数据，输出格式符合要求。                                                                                                               |
| 1.6     | 数据访问层（Python/Go）              |    | 编写 Python/Go 的数据库访问函数，为后续模块提供统一的数据接口。包含访问历史数据和实时数据的标准函数 | 可以通过函数接口访问数据库，可以访问历史数据和实时数据， 数据格式正确，数据一致|

**阶段 2：技术分析模块开发 (预计时间：3-4周)**

| 任务编号 | 任务描述                 | 负责人 | 详细描述                                                                                                                                                                                                                                | 验收标准                                                                                                                                                                            |
| -------- | ------------------------ | ----- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| 2.1      | 常用技术指标计算（Go）   |       | 实现MA, EMA, MACD, RSI, KDJ, BOLL, ATR, OBV等指标的计算函数（Go实现，考虑性能）。                                                                                                                                                                   | 指标计算函数准确无误，性能满足要求（通过基准测试验证）。                                                                                                                               |
| 2.2      | 自定义指标接口（Python/Go） |       | 提供接口，允许用户使用Python或Go编写自定义指标的计算逻辑。自定义指标可以访问历史数据和实时数据。                                                                                                                                                            | 用户可编写自定义指标脚本，系统能正确加载并计算自定义指标。                                                                                                                            |
| 2.3      | 基于指标的信号生成（Python）   |       | *   实现指标值阈值触发信号。*   实现指标金叉/死叉触发信号。*   实现指标与价格背离触发信号。                                                                                                                                                               | 信号生成逻辑正确，可根据配置参数生成相应的买入/卖出信号。                                                                                                                             |
| 2.4      | K线形态识别（Python）      |       | 实现常见的K线形态识别（锤头线、吊颈线、吞没形态、早晨之星、黄昏之星等）。                                                                                                                                                                           | 形态识别准确率达到可接受水平（通过测试集验证）。                                                                                                                                     |
| 2.5      | 图表形态识别（Python）      |       | 实现常见的图表形态识别（头肩顶、头肩底、双顶、双底、三角形、旗形等）。                                                                                                                                                                            | 形态识别准确率达到可接受水平（通过测试集验证）。                                                                                                                                     |
| 2.6      | 信号组合与过滤（Python）   |       | *   允许用户组合多个指标信号、形态信号。*   支持逻辑运算符（AND, OR, NOT）。*   允许用户设置过滤条件（特定时间段、成交量等）。                                                                                                                                 | 用户可灵活组合和过滤信号，系统能正确执行组合逻辑。                                                                                                                                 |
|  2.7     | 编写单元测试用例   |       | 编写单元测试用例，包含指标计算， 信号生成等                                                                                                                                                               | 单元测试覆盖率达到要求， 无明显bug |

**阶段 3：AI 模型模块开发 (预计时间：4-5周)**

| 任务编号 | 任务描述               | 负责人 | 详细描述                                                                                                                                                            | 验收标准                                                                                                                                     |
| -------- | ---------------------- | ----- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------- |
| 3.1      | 特征工程               |       | *   提取基础特征（价格、成交量、技术指标值、时间特征）。*   提取衍生特征（变化率、波动率、指标差分等）。*   进行特征选择（相关性分析、特征重要性评估）。                          | 特征工程完成，特征数据质量高，特征选择合理。                                                                                                                |
| 3.2      | 模型选择与训练          |       | *   选择候选模型（LSTM, Transformer, GRU, 随机森林, XGBoost等）。*   划分数据集（训练集、验证集、测试集）。*   训练模型。*   进行模型评估（回归/分类指标）。*   进行模型调优（手动/自动）。* 保存模型。 | 模型训练完成，评估指标达到预期，模型文件已保存。                                                                                                        |
| 3.3      | 模型预测模块           |       | *   开发模型预测模块。*   实现模型输出（概率/评分、置信度、特征重要性）。*   设置预测频率。                                                                                 | 模型预测模块可正常运行，输出格式正确，预测频率可配置。                                                                                                   |
| 3.4      | 股票筛选功能           |       | *   实现预设的选股策略（突破、趋势、反转、动量等）。*   实现自定义筛选功能（技术指标、AI模型预测结果、基本面指标（需额外数据源）、价格/成交量等条件）。*   支持逻辑运算符。*   实时更新筛选结果。      | 股票筛选功能正常，可按预设策略和自定义条件筛选股票，结果实时更新。                                                                                              |
| 3.5     |  编写单元测试与集成测试   |   | 编写单元测试，包含特征工程， 模型训练与预测， 股票筛选等. 集成测试， 测试整个AI模块与数据模块， 技术分析模块的集成  | 单元测试与集成测试通过， 覆盖到各种功能与场景 |

**阶段 4：交易执行模块（模拟）开发 (预计时间：3-4周)**

| 任务编号 | 任务描述                 | 负责人 | 详细描述                                                                                                           | 验收标准                                                                                   |
| -------- | ------------------------ | ----- | ------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------ |
| 4.1      | 模拟交易环境搭建         |       | 创建模拟交易环境，模拟真实交易（考虑交易费用、滑点）。                                                                             | 模拟交易环境可正常运行，交易逻辑正确。                                                               |
| 4.2      | 模拟订单管理             |       | 跟踪模拟订单状态（已提交、部分成交、已成交、已撤销等），处理异常情况。                                                                   | 模拟订单管理功能正常，可正确跟踪订单状态。                                                               |
| 4.3      | 模拟风险控制             |       | 实现止损/止盈、仓位控制、最大回撤控制。                                                                                   | 风险控制功能正常，可有效控制风险。                                                                   |
| 4.4      | 交易记录与报告生成       |       | 记录模拟交易详情，生成交易报告。                                                                                         | 交易记录完整，报告格式清晰。                                                                       |
| 4.5      | 交易信号推送（界面）       |       | 当检测到交易机会时，在界面弹窗提示，播放提示音。                                                                                 | 交易信号推送及时、准确。                                                                       |
| 4.6      | 编写单元测试    |   | 编写单元测试用例， 覆盖模拟交易的各个功能    | 单元测试通过   |

**阶段 5：用户界面开发 (预计时间：4-5周)**

| 任务编号 | 任务描述             | 负责人 | 详细描述                                                                                                                                                                                                     | 验收标准                                                                                                                      |
| -------- | -------------------- | ----- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------- |
| 5.1      | UI 原型设计          |       | 设计 UI 原型，包括各个模块的布局、交互方式。                                                                                                                                                                 | UI 原型通过评审。                                                                                                             |
| 5.2      | 实时行情展示         |       | *   图表展示实时价格、成交量、涨跌幅。*   支持多种图表类型（K线、分时图等）。*   支持自定义时间周期。*   支持画线工具。*   支持添加技术指标。                                                                      | 实时行情展示功能正常，图表显示清晰，操作流畅。                                                                                        |
| 5.3      | 技术指标展示         |       | 在图表上叠加显示技术指标，支持用户选择和配置。                                                                                                                                                               | 技术指标显示正确，用户可灵活配置。                                                                                                |
| 5.4      | 交易信号展示与管理   |       | 在图表上标记信号，提供信号列表，支持过滤、排序、标记。                                                                                                                                                           | 交易信号展示清晰，管理功能方便易用。                                                                                              |
| 5.5      | 模拟账户信息展示     |       | 显示模拟账户余额、持仓、盈亏、交易记录。                                                                                                                                                                   | 模拟账户信息展示正确。                                                                                                      |
| 5.6      | 交易记录查询         |       | 提供历史交易记录查询，支持按时间、股票、方向筛选。                                                                                                                                                            | 交易记录查询功能正常。                                                                                                      |
| 5.7      | 参数配置功能         |       | 提供各种参数配置界面（技术指标、AI模型、交易策略、风险控制、股票筛选等）。                                                                                                                                        | 参数配置功能完整，用户可灵活配置。                                                                                              |
| 5.8      | 股票池功能           |       | 展示符合筛选条件的股票列表，提供股票对比功能，支持添加到自选股。                                                                                                                                                   | 股票池功能正常，筛选结果准确。                                                                                                |
| 5.9      | 图表增强功能         |    | 增加图表功能, 例如画线、标注、添加自定义指标、添加文本注释， 支持多图表对比, 支持图表的拖拽、缩放、滚动等操作 | 增强功能正常， 用户体验好 |
| 5.10     | 自定义工作区功能     |       | 允许用户定制界面布局、图表显示、指标参数，保存多个工作区。                                                                                                                                                     | 自定义工作区功能正常，用户可灵活定制界面。                                                                                      |
| 5.11     | 消息中心             |       | 集中展示各种通知，用户可配置通知方式。                                                                                                                                                                        |消息中心功能正常，通知及时准确。|
| 5.12     | 用户体验测试与优化   |       | 进行用户体验测试，收集用户反馈，优化界面和交互。                                                                                                                                                               | 用户体验良好，无明显缺陷。                                                                                                |

**阶段 6：系统集成与测试 (预计时间：2-3周)**

| 任务编号 | 任务描述     | 负责人 | 详细描述                                                                                                                                          | 验收标准                                                                       |
| -------- | ------------ | ----- | ------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------ |
| 6.1      | 模块整合     |       | 将各个模块（数据、技术分析、AI模型、模拟交易、UI）整合。                                                                                                    | 各模块集成成功，数据流转正常。                                                         |
| 6.2      | 单元测试     |       | 针对每个模块的独立功能进行测试。                                                                                                                    | 单元测试覆盖率达到要求，无明显bug。                                                    |
| 6.3      | 集成测试     |       | 测试各个模块之间的交互。                                                                                                                          | 集成测试通过，各模块协同工作正常。                                                     |
| 6.4      | 系统测试     |       | 从用户角度进行端到端的测试。                                                                                                                        | 系统测试通过，功能符合需求。                                                           |
| 6.5      | 回测         |       | 使用历史数据对交易策略进行回测。                                                                                                                      | 回测结果符合预期，策略有效性得到验证。                                                   |
| 6.6      | 模拟交易测试 |       | 在模拟环境中进行真实交易场景的测试。                                                                                                                  | 模拟交易测试通过，系统在模拟环境下稳定运行。                                                 |
| 6.7      | 性能测试     |       | 测试系统的性能（数据处理速度、响应时间、并发量）。                                                                                                          | 性能测试结果满足要求。                                                               |
| 6.8      | 稳定性测试   |       | 测试系统的稳定性（长时间运行是否出错）。                                                                                                                | 稳定性测试通过，系统长时间运行无异常。                                                     |
| 6.9      | 安全性测试   |       | 测试系统的安全性（防止数据泄露、防止恶意攻击）。                                                                                                          | 安全性测试通过，系统安全性满足要求。                                                       |

**阶段 7：部署与监控 (预计时间：1周)**

| 任务编号 | 任务描述       | 负责人 | 详细描述                                                                        | 验收标准                                                   |
| -------- | -------------- | ----- | ------------------------------------------------------------------------------- | ---------------------------------------------------------- |
| 7.1      | 服务器部署     |       | 将系统部署到服务器（本地或云服务器）。                                                     | 系统成功部署，可通过网络访问。                                     |
| 7.2      | 环境配置     |       | 配置服务器环境（安装软件和依赖）。                                                           | 服务器环境配置正确，系统可正常运行。                                 |
| 7.3      | 系统监控设置   |       | 设置系统监控（数据、模型、交易、异常报警）。                                                   | 系统监控正常运行，异常情况可及时报警。                             |
| 7.4      | 文档编写     |       | 编写部署文档和操作手册。                                                                 | 文档完整、清晰，用户可根据文档操作。                               |

**阶段8： 持续优化 (长期)**
| 任务编号 | 任务描述       | 负责人 | 详细描述                                                                        | 验收标准                                                   |
| -------- | -------------- | ----- | ------------------------------------------------------------------------------- | ---------------------------------------------------------- |
| 8.1      | 策略和模型优化   |     | 根据实盘或模拟盘的表现进行优化  | 策略和模型得到优化                                     |
| 8.2      | 用户反馈     |       | 收集用户反馈, 不断改进用户界面和用户体验。                                                           | 用户体验提高                                 |
| 8.3      | 系统更新   |       | 定期更新系统,修复 bug, 添加新功能。                                                                 | 系统功能保持最新                               |
| 8.4      | 新技术研究     |       | 跟踪最新的量化交易技术和 AI 技术, 及时应用到系统中                  | 系统保持技术领先                             |

**4. 风险管理**

*   **市场风险：**  提醒用户，量化交易不能保证